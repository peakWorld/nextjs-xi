@import "./var.scss";

/** 变量 */
$color: white;

/** 嵌套规则 */
#main p {
  color: #00ff00;
  .redbox {
    background-color: #ff0000;
  }
}

// 父选择器
a {
  font-weight: bold;
  &-sidebar {
    border: 1px solid;
  }
  &:hover {
    text-decoration: underline;
  }
}

// 嵌套属性
.funky {
  font: {
    family: fantasy;
    size: 30em;
    weight: bold;
  }
}

// 占位符选择器
%cls1 {
  font-weight: bold;
}

/** 语法 */

// 变量
$width: 5em;
$font-size: 24px;
$line-height: 10px;
$name: banner;
$attr: border;
$content: null;
$content: "Non-null content" !default; // 变量是 null 空值时将视为被 !default 赋值。
$bold: bolder;

#main {
  width: $width;
}

// 运算
p {
  content: "Foo " + Bar; // 有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的
  font-family: sans- + "serif"; // 无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号
  width: 1in + 8pt;
  font: 10px/8px;
  font: #{$font-size}/#{$line-height};
  color: hsl(0, 100%, 50%); // 函数
}
// 插值语法
p:before {
  content: "I ate #{5 + 10} pies!";
}

p.#{$name} {
  #{$attr}-color: blue;
  font-weight: $bold;
}

/** 指令 */

// @media
.sidebar {
  width: 300px;
  @media screen and (orientation: landscape) {
    width: 500px;
  }
}

// @extend 样式继承
.error {
  border: 1px #f00;
  background-color: #fdd;
}
.seriousError {
  @extend .error;
  border-width: 3px;
}

@media print {
  .error {
    border: 1px #f00;
    background-color: #fdd;
  }
  .seriousError {
    @extend .error; // 必须延伸@media中的选择器
    border-width: 3px;
  }
}

/** 控制指令 */

// if
$type: monster;
p {
  @if $type == ocean {
    color: blue;
  } @else if $type == matador {
    color: red;
  } @else if $type == monster {
    color: green;
  } @else {
    color: black;
  }
}

// for
@for $i from 1 through 3 {
  .item-#{$i} {
    width: 2em * $i;
  }
}

// each
@each $animal in puma, sea-slug, egret, salamander {
  .#{$animal}-icon {
    background-image: url("/images/#{$animal}.png");
  }
}

// while
$i: 6;
@while $i > 0 {
  .item-#{$i} {
    width: 2em * $i;
  }
  $i: $i - 2;
}

/** 混合 */
@mixin header-text {
  font-size: 20px;
}
.bg {
  @include header-text;
}

// 带参数
@mixin sexy-border($color, $width) {
  border: {
    color: $color;
    width: $width;
    style: dashed;
  }
}
p {
  @include sexy-border(blue, 1in); // 按顺序传参
}
h1 {
  @include sexy-border($color: blue, $width: 2in); // 按名传参
}

// 参数变量
@mixin box-shadow($shadows...) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}
.shadows {
  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);
}

// 混合样式
@mixin colorful {
  color: red;
  @content;
}

.bg {
  @include colorful() {
    background-color: green;
  }
}

/** 函数  **/
@function grid-width($n) {
  @return $n * 40px + ($n - 1) * 10px;
}

#sidebar {
  width: grid-width(5);
}
